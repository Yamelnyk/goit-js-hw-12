import{a as L,i as d,S as b}from"./assets/vendor-09d7c26e.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function a(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(t){if(t.ep)return;t.ep=!0;const o=a(t);fetch(t.href,o)}})();async function u(s,e){const a="https://pixabay.com/api/",n=new URLSearchParams({key:"43183854-3276a6d2cec346ebc07eac88c",q:s,image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:15,page:e});return(await L.get(a,{params:n})).data}function m(s){return s.map(e=>`<div class="card">
        <a class="gallery-link" href="${e.largeImageURL}">
            <img class="gallery-image" src="${e.webformatURL}" alt="${e.tags}" />
          </a>
          <ul class="list">
            <li class="item">Likes: <span>${e.likes}</span></li>
            <li class="item">Views: <span>${e.views}</span></li>
            <li class="item">Comments: <span>${e.comments}</span></li>
            <li class="item">Downloads: <span>${e.downloads}</span></li>
          </ul>
          </div>`).join("")}const r={formEl:document.querySelector(".form"),gallery:document.querySelector(".gallery"),loadElem:document.querySelector(".loader"),btnLoadMore:document.querySelector(".js-btn-load")};let l,i=1,f=0;const w=14;r.formEl.addEventListener("submit",S);r.btnLoadMore.addEventListener("click",v);async function S(s){s.preventDefault(),g(),l=r.formEl.elements.searchImages.value.trim(),r.gallery.innerHTML="",i=1,l.length||d.error({color:"yellow",message:" Please fill in the field for search query.",position:"topRight"});try{const e=await u(l,i);f=Math.ceil(e.total/w),e.hits.length||d.error({color:"red",message:"❌ Sorry, there are no images matching your search query. Please try again!",position:"topRight"});const a=m(e.hits);r.gallery.insertAdjacentHTML("beforeend",a),h(),new b(".gallery a").refresh()}catch(e){console.log(e)}y(),p(),r.formEl.reset()}async function v(){g(),i+=1;const s=await u(l,i),e=m(s.hits);r.gallery.insertAdjacentHTML("beforeend",e);const a=r.gallery.firstElementChild.getBoundingClientRect().height;window.scrollBy({top:a*2}),y(),p()}function p(){i>=f?(E(),d.show({message:"We're sorry, but you've reached the end of search results.",position:"topRight"})):h()}function h(){r.btnLoadMore.classList.remove("hidden")}function E(){r.btnLoadMore.classList.add("hidden")}function g(){r.loadElem.classList.remove("hidden")}function y(){r.loadElem.classList.add("hidden")}
//# sourceMappingURL=commonHelpers.js.map
